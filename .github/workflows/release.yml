name: Release to PyPI

on:
    push:
      branches: [main]

jobs:
  semantic_release:
    uses: ./.github/workflows/semantic_release.yml 

  release:
    needs: semantic_release  
    runs-on: ubuntu-latest
    
    steps:
        - name: Checkout code
          uses: actions/checkout@v4
          
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.9'
            
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install build twine
            
            - name: Update version files
            run: |
              # Extract version from GitHub release tag (removes 'v' prefix if present)
              VERSION=${GITHUB_REF#refs/tags/}
              VERSION=${VERSION#v}
              echo "Extracted version: ${VERSION}"
              echo "Updating version to: ${VERSION}"
              
              # Update pyproject.toml
              sed -i "s/version = \".*\"/version = \"${VERSION}\"/" pyproject.toml
              
              # Update __init__.py (fixed path)
              sed -i "s/__version__ = \".*\"/__version__ = \"${VERSION}\"/" tqdm_pandas/__init__.py
              
              # Verify updates
              echo "pyproject.toml version:"
              grep 'version = ' pyproject.toml
              echo "__init__.py version:"
              grep '__version__' tqdm_pandas/__init__.py
            
        - name: Clean previous builds
          run: rm -rf dist/ build/ *.egg-info/
          
        - name: Build package
          run: |
            python -m build
            echo "Built files:"
            ls -la dist/
            
        - name: Check package
          run: twine check dist/*
          
        - name: Publish to PyPI
          env:
            TWINE_USERNAME: __token__
            TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          run: twine upload dist/* --verbose